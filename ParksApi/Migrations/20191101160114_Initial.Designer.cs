// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParksApi.Models;

namespace ParksApi.Migrations
{
    [DbContext(typeof(ParksApiContext))]
    [Migration("20191101160114_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ParksApi.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Line1");

                    b.Property<string>("Line2");

                    b.Property<string>("Line3");

                    b.Property<int>("ParkId");

                    b.Property<string>("State");

                    b.Property<string>("Type");

                    b.Property<string>("Zipcode");

                    b.HasKey("AddressId");

                    b.HasIndex("ParkId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ParksApi.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CommonName");

                    b.Property<string>("Description");

                    b.Property<string>("ScientificName");

                    b.HasKey("AnimalId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("ParksApi.Models.Fee", b =>
                {
                    b.Property<int>("FeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Cost");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("ParkId");

                    b.HasKey("FeeId");

                    b.HasIndex("ParkId");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("ParksApi.Models.LocalWildlife", b =>
                {
                    b.Property<int>("LocalWildlifeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AnimalId");

                    b.Property<int>("ParkId");

                    b.HasKey("LocalWildlifeId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("ParkId");

                    b.ToTable("LocalWildlife");
                });

            modelBuilder.Entity("ParksApi.Models.Park", b =>
                {
                    b.Property<int>("ParkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("OperatingHours");

                    b.Property<string>("ParkUrl");

                    b.HasKey("ParkId");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("ParksApi.Models.Address", b =>
                {
                    b.HasOne("ParksApi.Models.Park")
                        .WithMany("VisitorCenterAddresses")
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParksApi.Models.Fee", b =>
                {
                    b.HasOne("ParksApi.Models.Park", "Park")
                        .WithMany("Fees")
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParksApi.Models.LocalWildlife", b =>
                {
                    b.HasOne("ParksApi.Models.Animal", "Animal")
                        .WithMany("Parks")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParksApi.Models.Park", "Park")
                        .WithMany("Animals")
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
